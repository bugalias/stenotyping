{"version":3,"sources":["./src/app/app.constant.ts","./src/environments/environment.ts","./src/app/textfield/textfield.component.ts","./src/app/textfield/textfield.component.html","./src/app/scoreboard/scoreboard.component.ts","./src/app/scoreboard/scoreboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/paragraph/paragraph.component.html","./src/app/paragraph/paragraph.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export const DEFAULT_TIME = 60;\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-textfield',\n  templateUrl: './textfield.component.html',\n  styleUrls: ['./textfield.component.css']\n})\nexport class TextfieldComponent implements OnInit {\n\n  private _disabled = true;\n  @Input() set disabled(val) {\n    this._disabled = val;\n    if (!val) {\n      this.inputRef.nativeElement.value = '';\n      const timeout = setTimeout(() => {\n        this.inputRef.nativeElement.focus();\n        clearTimeout(timeout);\n      }, 100);\n    }\n  }\n  get disabled() {\n    return this._disabled;\n  }\n\n  @Output() typing = new EventEmitter();\n\n  @ViewChild('input') inputRef: ElementRef;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onKeyup(e) {\n    this.typing.emit({\n      value: e.target.value,\n      key: e.key\n    });\n  }\n\n  onKeydownSpace(e) {\n    if (!e.target.value || e.target.value.endsWith(' ')) {\n      // Not allowing more than one space\n      e.preventDefault();\n      return;\n    }\n  }\n\n  restrictKeys(e) {\n    // Not allowing enter key\n    e.preventDefault();\n    return;\n  }\n}\n","<textarea placeholder=\"Start typing here...\" [disabled]=\"disabled\" #input class=\"no-selection\" (keydown.Enter)=\"restrictKeys($event)\"\n  (keydown.ArrowLeft)=\"restrictKeys($event)\"\n  (keydown.Space)=\"onKeydownSpace($event)\" (keyup)=\"onKeyup($event)\" (paste)=\"$event.preventDefault()\"></textarea>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { timer } from 'rxjs';\nimport { DEFAULT_TIME } from '../app.constant';\n\n@Component({\n  selector: 'app-scoreboard',\n  templateUrl: './scoreboard.component.html',\n  styleUrls: ['./scoreboard.component.css']\n})\nexport class ScoreboardComponent implements OnInit {\n\n  readonly defaultTime = DEFAULT_TIME;\n\n  private _start = false;\n  @Input() set start(val) {\n    this._start = val;\n    if (val) {\n      this.time = this.defaultTime;\n      this.lastBest = this.records.best;\n      this.startTimer();\n    } else if (this.timer) {\n      this.timesUp.emit(this.time);\n      this.timer.unsubscribe();\n    }\n  }\n  get start() {\n    return this._start;\n  }\n\n  @Input() score;\n\n  time = this.defaultTime;\n  timer;\n\n  @Output() timesUp = new EventEmitter();\n\n  @Input() records = {\n    best: 0,\n    last: 0\n  };\n  lastBest = this.records.best;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.lastBest = this.records.best;\n  }\n\n  startTimer() {\n    this.timer = timer(1000, 1000).subscribe(res => {\n      if (res === this.defaultTime) {\n        this.time = 0;\n        this.timesUp.emit(0);\n        this.timer.unsubscribe();\n        this.timer = null;\n      } else {\n        this.time--;\n      }\n    });\n  }\n}\n","<h1 *ngIf=\"time\" class=\"timer\">Time left: {{ time }} seconds</h1>\n<h1 *ngIf=\"!time\" class=\"timer\">Time's up</h1>\n\n<section class=\"scores-section\">\n  <div class=\"wpm\">Words per minute: {{score.wpm}}</div>\n  <div class=\"errors\">Errors: {{score.errors}}</div>\n  <div class=\"score\">Total score: {{score.total}}</div>\n</section>\n<section class=\"records\">\n  <div class=\"accuracy\">Accuracy: {{score.accuracy}}%</div>\n  <div class=\"best\">\n    Best score: {{records.best}}\n    <span class=\"new-best\" *ngIf=\"this.lastBest < records.best\">&nbsp;(New)</span>\n  </div>\n  <div class=\"last\">Last score: {{records.last}}</div>\n</section>\n","import { Component } from '@angular/core';\nimport { DEFAULT_TIME } from './app.constant';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  paragraphs = [{\n    text: 'A working thesis functions like a seed from which your paper, and your ideas, will grow. The whole process is an organic one—a natural progression from a seed to a full-blown paper where there are direct, familial relationships between all of the ideas in the paper. Building paragraphs can be like building a skyscraper: there must be a well-planned foundation that supports what you are building. Any cracks, inconsistencies, or other corruptions of the foundation can cause your whole paper to crumble. Paragraph development begins with the formulation of the controlling idea. This idea directs the paragraph’s development. Often, the controlling idea of a paragraph will appear in the form of a topic sentence. In some cases, you may need more than one sentence to express a paragraph’s controlling idea.'\n  }, {\n    text: 'Building paragraphs can be like building a skyscraper: there must be a well-planned foundation that supports what you are building. Any cracks, inconsistencies, or other corruptions of the foundation can cause your whole paper to crumble. Paragraph development begins with the formulation of the controlling idea. This idea directs the paragraph’s development. Often, the controlling idea of a paragraph will appear in the form of a topic sentence. In some cases, you may need more than one sentence to express a paragraph’s controlling idea. A working thesis functions like a seed from which your paper, and your ideas, will grow. The whole process is an organic one—a natural progression from a seed to a full-blown paper where there are direct, familial relationships between all of the ideas in the paper.'\n  }, {\n    text: 'Paragraph development begins with the formulation of the controlling idea. This idea directs the paragraph’s development. Often, the controlling idea of a paragraph will appear in the form of a topic sentence. In some cases, you may need more than one sentence to express a paragraph’s controlling idea. A working thesis functions like a seed from which your paper, and your ideas, will grow. The whole process is an organic one—a natural progression from a seed to a full-blown paper where there are direct, familial relationships between all of the ideas in the paper. Building paragraphs can be like building a skyscraper: there must be a well-planned foundation that supports what you are building. Any cracks, inconsistencies, or other corruptions of the foundation can cause your whole paper to crumble.'\n  }];\n\n  upcomingSentence = '';\n  nextWord = '';\n  previousWords = [];\n  allWords = [];\n  selectedParagraph = '';\n  startTyping = false;\n  score = {\n    wpm: 0,\n    errors: 0,\n    total: 0,\n    accuracy: 0\n  };\n  records = {\n    best: parseInt(localStorage.getItem('best') || '0', 10),\n    last: parseInt(localStorage.getItem('last') || '0', 10)\n  };\n\n  defaultTime = DEFAULT_TIME;\n\n  ngOnInit() {\n    this.resetTest();\n  }\n\n  newWordEntered(e) {\n    if (this.startTyping) {\n      const typedWords = e.value.split(' ');\n      const score = {\n        wpm: 0,\n        errors: 0,\n        total: 0,\n        accuracy: 0\n      };\n      this.previousWords = [];\n\n      for (let i = 0; i < typedWords.length - 1; i++) {\n        const typedWord = typedWords[i];\n        const originalWord = this.allWords[i];\n        const wordInfo = {\n          hasError: false,\n          word: originalWord\n        };\n\n        if (typedWord === originalWord) {\n          score.total += 10;\n        } else {\n          score.total -= 5;\n          wordInfo.hasError = true;\n          score.errors++;\n        }\n\n        this.previousWords.push(wordInfo);\n      }\n\n      this.nextWord = this.allWords[typedWords.length - 1];\n      this.upcomingSentence = this.allWords.slice(typedWords.length).join(' ');\n\n      this.score = score;\n    }\n  }\n\n  startTimer() {\n    if (this.previousWords.length) {\n      this.resetTest();\n      this.records.last = parseInt(localStorage.getItem('last') || '0', 10);\n    }\n    if (!this.startTyping) {\n      this.score = { // Resetting scores\n        wpm: 0,\n        errors: 0,\n        total: 0,\n        accuracy: 0\n      };\n      this.startTyping = true;\n    }\n  }\n\n  stopTimer() {\n    if (this.startTyping) {\n      this.startTyping = false;\n    }\n  }\n\n  resetTest() {\n    this.previousWords = [];\n    this.selectedParagraph = this.paragraphs[Math.floor(Math.random() * this.paragraphs.length)].text;\n    const firstSpaceIndex = this.selectedParagraph.indexOf(' ');\n\n    this.upcomingSentence = this.selectedParagraph.substr(firstSpaceIndex + 1);\n    this.nextWord = this.selectedParagraph.substr(0, firstSpaceIndex);\n\n    this.allWords = this.selectedParagraph.split(' ');\n  }\n\n  timesUp(timeInSeconds) {\n    this.startTyping = false;\n    this.score.wpm = this.previousWords.length / ((this.defaultTime - timeInSeconds) / 60);\n    this.score.accuracy = this.previousWords.length ? parseFloat((((this.previousWords.length - this.score.errors) / this.previousWords.length) * 100).toFixed(2)) : 0;\n\n    if (this.score.total > this.records.best) {\n      localStorage.setItem('best', this.score.total.toString());\n      this.records.best = this.score.total;\n    }\n\n    localStorage.setItem('last', this.score.total.toString());\n    this.resetTest();\n  }\n}\n","<main>\n  <app-scoreboard [start]=\"startTyping\" [score]=\"score\" [records]=\"records\" (timesUp)=\"timesUp($event)\"></app-scoreboard>\n  <app-paragraph [typedWords]=\"previousWords\" [nextWord]=\"nextWord\" [upcomingSentence]=\"upcomingSentence\"></app-paragraph>\n  <app-textfield [disabled]=\"!startTyping\" (typing)=\"newWordEntered($event)\"></app-textfield>\n\n  <div class=\"actions\">\n    <button *ngIf=\"!startTyping\" (click)=\"startTimer()\">Start</button>\n    <button *ngIf=\"startTyping\" (click)=\"stopTimer()\">Stop</button>\n  </div>\n</main>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { ScoreboardComponent } from './scoreboard/scoreboard.component';\nimport { ParagraphComponent } from './paragraph/paragraph.component';\nimport { TextfieldComponent } from './textfield/textfield.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ScoreboardComponent,\n    ParagraphComponent,\n    TextfieldComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<p>\n  <span *ngFor=\"let word of typedWords\" class=\"previous\" [class.error]=\"word.hasError\">{{ word.word ? word.word + ' ' : '' }}</span>\n  <span class=\"next\">{{ nextWord ? nextWord + ' ' : '' }}</span>\n  <span class=\"upcoming\">{{ upcomingSentence }}</span>\n</p>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-paragraph',\n  templateUrl: './paragraph.component.html',\n  styleUrls: ['./paragraph.component.css']\n})\nexport class ParagraphComponent implements OnInit {\n\n  @Input() typedWords = [];\n\n  @Input() nextWord = '';\n\n  @Input() upcomingSentence = '';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}